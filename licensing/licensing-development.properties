msg = Hello World - this is from config server - Development environment
# DataSource settings: set here your own configurations for the database 
spring.datasource.url = jdbc:postgresql://localhost:5432/ostock_dev
spring.datasource.username = postgres
spring.datasource.password = SF4ever1!

eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/

resilience4j.circuitbreaker.instances.licensing.registerHealthIndicator = true
resilience4j.circuitbreaker.instances.licensing.ringBufferSizeInClosedState = 5
resilience4j.circuitbreaker.instances.licensing.ringBufferSizeInHalfOpenState = 3
resilience4j.circuitbreaker.instances.licensing.waitDurationInOpenState = 10s
resilience4j.circuitbreaker.instances.licensing.failureRateThreshold = 50
resilience4j.circuitbreaker.instances.licensing.recordExceptions[0] = org.springframework.web.client.HttpServerErrorException
resilience4j.circuitbreaker.instances.licensing.recordExceptions[1] = java.io.IOException
resilience4j.circuitbreaker.instances.licensing.recordExceptions[2] = java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.instances.licensing.recordExceptions[3] = org.springframework.web.client.ResourceAccessException

resilience4j.circuitbreaker.instances.organizationService.registerHealthIndicator = true
resilience4j.circuitbreaker.instances.organizationService.ringBufferSizeInClosedState = 5
resilience4j.circuitbreaker.instances.organizationService.ringBufferSizeInHalfOpenState = 3
resilience4j.circuitbreaker.instances.organizationService.waitDurationInOpenState = 10s
resilience4j.circuitbreaker.instances.organizationService.failureRateThreshold = 50

resilience4j.bulkhead.instances.bulkheadLicenseService.maxWaitDuration = 10ms
resilience4j.bulkhead.instances.bulkheadLicenseService.maxConcurrentCall = 20

resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.maxThreadPoolSize = 1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.coreThreadPoolSize = 1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.queueCapacity = 1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.keepAliveDuration = 20ms

resilience4j.retry.instances.retryLicenseService.maxRetryAttempts = 5
resilience4j.retry.instances.retryLicenseService.waitDuration = 1000
resilience4j.retry.instances.retryLicenseService.retry-exceptions = javax.util.concurrent.TimeoutException

